---
# Source: config-demo/templates/config-demo-cm.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-demo-configmap
  labels:
    app.kubernetes.io/instance: config-demo
data:
  "index.html": |-
    <!DOCTYPE html>
      <html lang="en">
        <head>
          <meta charset="utf-8">
            <title>Config Demo</title>
        </head>
          <body>
            <h1>
            Hub Cluster domain is 'hub.example.com' <br>
            Pod is running on Local Cluster Domain 'region.example.com' <br>
            </h1>
            <h2>
            The secret is <a href="/secret/secret">secret</a>
            </h2>
          </body>
      </html>
---
# Source: config-demo/templates/config-demo-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: config-demo
  name: config-demo
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: config-demo
    deploymentconfig: config-demo
  sessionAffinity: None
  type: ClusterIP
---
# Source: config-demo/templates/config-demo-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    application: config-demo
  name: config-demo
spec:
  replicas: 2
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      deploymentconfig: config-demo
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: config-demo
        deploymentconfig: config-demo
      name: config-demo
    spec:
      containers:
      - name: apache
        image: registry.access.redhat.com/ubi8/httpd-24
        #imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        volumeMounts:
        - mountPath: /var/www/html
          name: config-demo-configmap
        - mountPath: /var/www/html/secret
          readOnly: true
          name: config-demo-secret
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        livenessProbe:
          httpGet:
            path: /index.html
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /index.html
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: config-demo-configmap
        configMap:
          defaultMode: 438
          name: config-demo-configmap
      - name: config-demo-secret
        secret:
          secretName: config-demo-secret
---
# Source: config-demo/templates/config-demo-secret.yaml
# The policy needs to be added to the ACM HUB and then it will be pushed on all clusters
# except the HUB (see placementrule on the bottom)
---
# Source: config-demo/templates/config-demo-external-secret.yaml
apiVersion: "external-secrets.io/v1beta1"
kind: ExternalSecret
metadata:
  name: config-demo-secret
  namespace: config-demo
spec:
  refreshInterval: 15s
  secretStoreRef:
    name: vault-backend
    kind: ClusterSecretStore
  target:
    name: config-demo-secret
    template:
      type: Opaque
  dataFrom:
  - extract:
      key: secret/data/hub/config-demo
---
# Source: config-demo/templates/config-demo-is.yaml
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: config-demo
spec:
  lookupPolicy:
    local: true
  tags:
  - name: registry.access.redhat.com/ubi8/httpd-24
    importPolicy: {}
    referencePolicy:
      type: Local
---
# Source: config-demo/templates/config-demo-secret.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: configdemo-region-secret-placement-binding
placementRef:
  name: configdemo-region-secret-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: configdemo-region-secret-policy
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
# Source: config-demo/templates/config-demo-secret.yaml
# We need to run this on any managed cluster but not on the HUB
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: configdemo-region-secret-placement
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - key: local-cluster
        operator: NotIn
        values:
          - 'true'
---
# Source: config-demo/templates/config-demo-secret.yaml
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: configdemo-region-secret-policy
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
    argocd.argoproj.io/sync-options: SkipPrune
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: config-demo-secret
          annotations:
            apps.open-cluster-management.io/deployables: "secret"
            policy.open-cluster-management.io/trigger-update: "2"
        spec:
          remediationAction: enforce
          severity: medium
          namespaceSelector:
            exclude:
              - kube-*
            include:
              - default
          object-templates:
            - complianceType: musthave
              objectDefinition:
                kind: Secret
                type: Opaque
                metadata:
                  name: config-demo-secret
                  namespace: config-demo
                apiVersion: v1
                data:
                  secret: '{{hub (lookup "v1" "Secret" "config-demo" "config-demo-secret").data.secret hub}}'
---
# Source: config-demo/templates/config-demo-route.yaml
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  labels:
    app: config-demo
  name: config-demo
spec:
  port:
    targetPort: 8080-tcp
  to:
    kind: Service
    name: config-demo
    weight: 100
  wildcardPolicy: None
