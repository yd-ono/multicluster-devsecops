---
# Source: pattern-clustergroup/templates/gitops-namespace.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: mypattern-example
  # The name here needs to be consistent with
  # - acm/templates/policies/application-policies.yaml
  # - clustergroup/templates/applications.yaml
  # - any references to secrets and route URLs in documentation
  name: mypattern-example
spec: {}
---
# Source: pattern-clustergroup/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: pattern
    argocd.argoproj.io/managed-by: mypattern-example
  name: open-cluster-management
spec:
---
# Source: pattern-clustergroup/templates/namespaces.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: pattern
    argocd.argoproj.io/managed-by: mypattern-example
  name: application-ci
spec:
---
# Source: pattern-clustergroup/templates/argocd-super-role.yaml
# WARNING: ONLY USE THIS FOR MANAGING CLUSTERS NOT FOR REGULAR USERS
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: openshift-gitops-cluster-admin-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: openshift-gitops-argocd-application-controller
    namespace: openshift-gitops
  # NOTE: THIS MUST BE FIXED FOR MULTITENANT SETUP
  - kind: ServiceAccount
    name: openshift-gitops-argocd-server
    namespace: openshift-gitops
---
# Source: pattern-clustergroup/templates/argocd-super-role.yaml
# WARNING: ONLY USE THIS FOR MANAGING CLUSTERS NOT FOR REGULAR USERS
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mypattern-example-cluster-admin-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    # This is the {ArgoCD.name}-argocd-application-controller
    name: example-gitops-argocd-application-controller
    namespace: mypattern-example
  # NOTE: THIS MUST BE FIXED FOR MULTITENANT SETUP
  - kind: ServiceAccount
    # This is the {ArgoCD.name}-argocd-server
    name: example-gitops-argocd-server
    namespace: mypattern-example
  # NOTE: This is needed starting with gitops-1.5.0 (see issue common#76)
  - kind: ServiceAccount
    name: example-gitops-argocd-dex-server
    namespace: mypattern-example
---
# Source: pattern-clustergroup/templates/projects.yaml
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: datacenter
  namespace: mypattern-example
spec:
  description: "Pattern datacenter"
  destinations:
  - namespace: '*'
    server: '*'
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  namespaceResourceWhitelist:
  - group: '*'
    kind: '*'
  sourceRepos:
  - '*'
status: {}
---
# Source: pattern-clustergroup/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: acm
  namespace: mypattern-example
spec:
  destination:
    name: in-cluster
    namespace: open-cluster-management
  project: datacenter
  source:
    repoURL: https://github.com/pattern-clone/mypattern
    targetRevision: 
    path: common/acm
    helm:
      valueFiles:
      - "https://github.com/pattern-clone/mypattern/raw/main/values-global.yaml"
      - "https://github.com/pattern-clone/mypattern/raw/main/values-example.yaml"
      # Watch the progress of https://issues.redhat.com/browse/GITOPS-891 and update accordingly
      parameters:
        - name: global.repoURL
          value: $ARGOCD_APP_SOURCE_REPO_URL
        - name: global.targetRevision
          value: $ARGOCD_APP_SOURCE_TARGET_REVISION
        - name: global.namespace
          value: $ARGOCD_APP_NAMESPACE
        - name: global.pattern
          value: mypattern
        - name: global.valuesDirectoryURL
          value: https://github.com/pattern-clone/mypattern/raw/main
        - name: global.hubClusterDomain
          value: hub.example.com
        - name: global.localClusterDomain
          value: region.example.com
        - name: global.localClusterName
          value: AUTOMATIC
  ignoreDifferences: [
  {
    "group": "internal.open-cluster-management.io",
    "jsonPointers": [
      "/spec/loggingCA"
    ],
    "kind": "ManagedClusterInfo"
  }
]
  syncPolicy:
    automated: {}
    #  selfHeal: true
---
# Source: pattern-clustergroup/templates/applications.yaml
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pipelines
  namespace: mypattern-example
spec:
  destination:
    name: in-cluster
    namespace: application-ci
  project: datacenter
  source:
    repoURL: https://github.com/pattern-clone/mypattern
    targetRevision: 
    path: charts/datacenter/pipelines
    helm:
      valueFiles:
      - "https://github.com/pattern-clone/mypattern/raw/main/values-global.yaml"
      - "https://github.com/pattern-clone/mypattern/raw/main/values-example.yaml"
      # Watch the progress of https://issues.redhat.com/browse/GITOPS-891 and update accordingly
      parameters:
        - name: global.repoURL
          value: $ARGOCD_APP_SOURCE_REPO_URL
        - name: global.targetRevision
          value: $ARGOCD_APP_SOURCE_TARGET_REVISION
        - name: global.namespace
          value: $ARGOCD_APP_NAMESPACE
        - name: global.pattern
          value: mypattern
        - name: global.valuesDirectoryURL
          value: https://github.com/pattern-clone/mypattern/raw/main
        - name: global.hubClusterDomain
          value: hub.example.com
        - name: global.localClusterDomain
          value: region.example.com
        - name: global.localClusterName
          value: AUTOMATIC
  syncPolicy:
    automated: {}
    #  selfHeal: true
---
# Source: pattern-clustergroup/templates/argocd.yaml
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  finalizers:
  - argoproj.io/finalizer
  # Changing the name affects the ClusterRoleBinding, the generated secret,
  # route URL, and argocd.argoproj.io/managed-by annotations
  name: example-gitops
  namespace: mypattern-example
  annotations:
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  applicationInstanceLabelKey: argocd.argoproj.io/instance
  # Not the greatest way to pass git/quay info to sub-applications, but it will do until
  # we can support helmChart with kustomize
  # The other option is to pass them in as environment variables eg. BLUEPRINT_VERSION
  configManagementPlugins: "- name: kustomize-version\n  generate:\n    command: [sh,
    -c]\n    args: [\"kustomize version 1>&2 && exit 1\"]\n- name: kustomize-with-helm\n
    \ generate:\n    command: [\"kustomize\"]\n    args: [\"build\", \"--enable-helm\"]\n- name:
    helm-with-kustomize\n  init:\n    command: [\"/bin/sh\", \"-c\"]\n    args: [\"helm
    dependency build\"]\n  generate:\n    command: [/bin/bash, -c]\n    args: [\"helm template . --name-template ${ARGOCD_APP_NAME:0:52}
    -f https://github.com/pattern-clone/mypattern/raw/main/values-global.yaml
    -f https://github.com/pattern-clone/mypattern/raw/main/values-example.yaml
    --set global.repoURL=$ARGOCD_APP_SOURCE_REPO_URL
    --set global.targetRevision=$ARGOCD_APP_SOURCE_TARGET_REVISION
    --set global.namespace=$ARGOCD_APP_NAMESPACE
    --set global.pattern=mypattern
    --set global.hubClusterDomain=hub.example.com
    --set global.localClusterDomain=region.example.com
    --set global.valuesDirectoryURL=https://github.com/pattern-clone/mypattern/raw/main
    --post-renderer ./kustomize\"]
    \ \n"
  applicationSet:
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 512Mi
  controller:
    processors: {}
    resources:
      limits:
        cpu: "4"
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 2Gi
  dex:
    openShiftOAuth: true
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  initialSSHKnownHosts: {}
  rbac:
    defaultPolicy: role:admin
  repo:
    resources:
      limits:
        cpu: "1"
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      kinds:
      - TaskRun
      - PipelineRun
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
    service:
      type: ""
  tls:
    ca: {}
status:
---
# Source: pattern-clustergroup/templates/operatorgroup.yaml
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: open-cluster-management-operator-group
  namespace: open-cluster-management
spec:
  targetNamespaces:
  - open-cluster-management
---
# Source: pattern-clustergroup/templates/operatorgroup.yaml
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: application-ci-operator-group
  namespace: application-ci
spec:
  targetNamespaces:
  - application-ci
---
# Source: pattern-clustergroup/templates/subscriptions.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: advanced-cluster-management
  namespace: open-cluster-management
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  name: advanced-cluster-management
  source: redhat-operators
  sourceNamespace: openshift-marketplace
  channel: release-2.3
  installPlanApproval: Automatic
---
# Source: pattern-clustergroup/templates/subscriptions.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: openshift-pipelines-operator-rh
  namespace: openshift-operators
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  name: openshift-pipelines-operator-rh
  source: redhat-operators
  sourceNamespace: openshift-marketplace
  channel: stable
  installPlanApproval: Automatic
